{
    // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    "Log to console": {
        "prefix": "logg",
        "body": ["console.log($1)"],
        "scope": "javascript, javascriptreact, typescript, typescriptreact",
        "description": "Log output to console"
    },
    "Log to varibale console": {
        "prefix": "logv",
        "body": ["console.log('$1', $1)$0"],
        "scope": "javascript, javascriptreact, typescript, typescriptreact",
        "description": "Log output to console"
    },
    "Log into brackets": {
        "prefix": "logb",
        "body": ["console.log({$1})$0"],
        "scope": "javascript, javascriptreact, typescript, typescriptreact",
        "description": "Log output to console"
    },
    "Import module": {
        "prefix": "imB",
        "body": ["import {${2}} from '$1'"],
        "scope": "javascript, javascriptreact, typescript, typescriptreact",
        "description": "React functional Component"
    },
    "Create a React FC Component": {
        "prefix": "fce", // Funtional Component at the End
        "body": [
            "function ${TM_FILENAME_BASE}() {",
            "\treturn (",
            "\t\t<>",
            "\t\t\t<h1>${TM_FILENAME_BASE}$0</h1>",
            "\t\t</>",
            "\t)",
            "}",
            "\nexport default ${TM_FILENAME_BASE}\n"
        ],
        "scope": "javascript, javascriptreact, typescript, typescriptreact",
        "description": "Create a React Functional Component and export it at the end of the file"
    },
    "React UseEffect": {
        "prefix": "use",
        "body": ["useEffect(() => {", "  $0", "}, [])"],
        "scope": "javascript, javascriptreact, typescript, typescriptreact",
        "description": "React useEffect"
    },
    "React UseState": {
        "prefix": "uss", // Use State and Setter
        "body": "const [ ${1}, set${1/(.)/${1:/capitalize}/} ] = useState($2)",
        "scope": "javascript, javascriptreact, typescript, typescriptreact",
        "description": "React useState"
    },
    "Create an Interface": {
        "prefix": "iP", // interface Props,
        "body": ["interface Props {", "\t$1", "}\n"],
        "scope": "typescript, typescriptreact",
        "description": "Create an interface for Props"
    }
}
